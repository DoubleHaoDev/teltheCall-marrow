plugins {
    id 'java'
    id 'org.liquibase.gradle' version "2.2.0"
}

group = 'com.telthecall.marrow'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    liquibaseRuntime 'org.liquibase:liquibase-core:4.24.0'
    liquibaseRuntime 'org.postgresql:postgresql:42.6.0'
}
apply plugin: "org.liquibase.gradle"

def env = "develop"
if (project.hasProperty("env")) {
    env = project.env
}

liquibase {
    def props = new Properties()
    file("./environments/" + env + ".conf").withInputStream { props.load( it )}
    def dbName = props.getProperty("DB_NAME")
    def dbServer = props.getProperty("DB_SERVER")
    def dbPort = props.getProperty("DB_PORT")
    def dbUser = props.getProperty("DB_USER")
    def dbPassword = props.getProperty("DB_PASSWORD")

    activities {
        main {
            url 'jdbc:postgresql://' + dbServer + ':' + dbPort + '/' +dbName
            username dbUser
            password dbPassword
        }
    }

    test {
        useJUnitPlatform()
    }
}
